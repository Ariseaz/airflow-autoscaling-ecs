Description: Creates Airflow Metadata DB with credential managed by AWS secrets

Resources:

  AuroraPublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Aurora Metadata DB. Public access
      GroupName: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-public-security-group"
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: "{{ metadataDb.port }}"
          IpProtocol: -1
          ToPort: "{{ metadataDb.port }}"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: "{{ metadataDb.port }}"
          IpProtocol: tcp
          ToPort: "{{ metadataDb.port }}"
        - CidrIp: "{{ service.cidrBlock }}/16"
          FromPort: "{{ metadataDb.port }}"
          IpProtocol: tcp
          ToPort: "{{ metadataDb.port }}"
      VpcId: !ImportValue network-VpcId
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-public-security-group"

  AuroraDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Posttgres Metadata DB Subnet Group
      DBSubnetGroupName: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-db-subnet-group"
      SubnetIds:
        - !ImportValue network-PublicSubnet1Id
        - !ImportValue network-PublicSubnet2Id
        - !ImportValue network-PublicSubnet3Id
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-db-subnet-group"

  AuroraDBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      AvailabilityZones:
        - "{{ AWS_REGION }}{{ publicSubnet.1.availabilityZone }}"
        - "{{ AWS_REGION }}{{ publicSubnet.2.availabilityZone }}"
        - "{{ AWS_REGION }}{{ publicSubnet.3.availabilityZone }}"
      BackupRetentionPeriod: 7
      DatabaseName: "{{ metadataDb.dbName }}"
      DBClusterIdentifier: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-cluster"
      DBClusterParameterGroupName: !Ref AuroraDBParameterGroup
      DBSubnetGroupName: !Ref AuroraDBSubnetGroup
      DeletionProtection: "{{ metadataDb.deletionProtection }}"
      EnableHttpEndpoint: "{{ metadataDb.enableHttpEndpoint }}"
      EnableIAMDatabaseAuthentication: "{{ metadataDb.enableIAMDatabaseAuthentication }}"
      Engine: "{{ metadataDb.engine }}"
      EngineMode: "{{ metadataDb.engineMode }}"
      EngineVersion: "{{ metadataDb.engineVersion }}"
      KmsKeyId: !ImportValue encryption-KMSKeyId
      MasterUsername: {% raw %} !Join ['', ['{{resolve:secretsmanager:', !ImportValue secrets-AuroraDBSecretId, ':SecretString:username}}' ]] {% endraw %}
      MasterUserPassword: {% raw %} !Join ['', ['{{resolve:secretsmanager:', !ImportValue secrets-AuroraDBSecretId, ':SecretString:password}}' ]] {% endraw %}
      Port: "{{ metadataDb.port }}"
      SourceRegion: "{{ AWS_REGION }}"
      StorageEncrypted: "{{ metadataDb.storageEncrypted }}"
      VpcSecurityGroupIds:
        - !Ref AuroraPublicSecurityGroup
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-cluster"

  AuroraDBParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Aurora Metadata DB Parameter Group
      Family: "{{ metadataDb.family }}"
      Parameters:
        max_connections: "{{ metadataDb.parameters.maxConnections }}"
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-db-parameter-group"

  SecretAuroraDBAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !ImportValue secrets-AuroraDBSecretId
      TargetId: !Ref AuroraDBCluster
      TargetType: AWS::RDS::DBCluster

  AuroraDBSecretRotationSchedule:
    Type: AWS::SecretsManager::RotationSchedule
    DependsOn: SecretAuroraDBAttachment
    Properties:
      SecretId: !ImportValue secrets-AuroraDBSecretId
      RotationLambdaARN: !ImportValue secrets-SecretRotationLambdaArn
      RotationRules:
        AutomaticallyAfterDays: "{{ metadataDb.secrets.rotationScheduleDays }}"

Outputs:
  AuroraDBClusterHost:
    Value: !GetAtt AuroraDBCluster.Endpoint.Address
    Export:
      Name: database-AuroraDBClusterHost

  AuroraDBClusterPort:
    Value: !GetAtt AuroraDBCluster.Endpoint.Port
    Export:
      Name: database-AuroraDBClusterPort