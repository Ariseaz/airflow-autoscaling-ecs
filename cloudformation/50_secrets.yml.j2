Description: Manages secrets for airflow resources

Resources:

  AuroraDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'This is Airflow Metadata DB secret'
      Name: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-db-credentials"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "airflow_admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 32
        ExcludeCharacters: '"@/\'
      KmsKeyId: !ImportValue encryption-KMSKeyId
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-aurora-db-secret"

  AuroraDBSecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref AuroraDBSecret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Deny
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: secretsmanager:DeleteSecret
            Resource: "*"

  SecretRotationLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Role: !ImportValue iam-RotationLambdaExecutionRoleArn
      Handler: rotate_secrets.lambda_handler
      Description: 'This is a lambda to rotate AuroraDB user password'
      FunctionName: "{{ serviceName }}-{{ ENVIRONMENT }}-rotation-lambda"]]
      Environment:
        Variables:
          SECRETS_MANAGER_ENDPOINT: 'https://secretsmanager.{{ AWS_REGION }}.amazonaws.com'
      Code:
        S3Bucket: !ImportValue storage-RotationLambdaCodeBucketName
        S3Key: "rotate_secrets/lambda_function.zip"

  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SecretRotationLambda
      Action: 'lambda:InvokeFunction'
      Principal: secretsmanager.amazonaws.com

  AirflowFernetKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: "{{ serviceName }}-{{ ENVIRONMENT }}-fernet-key"
      Description: 'This is Fernet Key secret'
      SecretString: '{"fernet_key": "{{ FERNET_KEY }}"}'
      KmsKeyId: !ImportValue encryption-KMSKeyId
      Tags:
        - Key: Name
          Value: "{{ serviceName }}-{{ ENVIRONMENT }}-fernet-key-secret"

Outputs:

  AuroraDBSecret:
    Value: !Ref AuroraDBSecret
    Export:
      Name: "secrets-AuroraDBSecretId"

  FernetKeySecret:
    Value: !Ref AirflowFernetKeySecret
    Export:
      Name: "secrets-AirflowFernetKeySecretId"

  SecretRotationLambdaArn:
    Value: !GetAtt SecretRotationLambda.Arn
    Export:
      Name: "secrets-SecretRotationLambdaArn"